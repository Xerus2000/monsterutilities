buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
	}
}
plugins {
	id 'application'
	id 'com.github.johnrengelman.shadow' version '2.0.1'
}
apply plugin: 'kotlin'

/*allprojects {
	apply plugin: 'idea'
	idea {
		module {
			outputDir file('build/idea/main')
			testOutputDir file('build/idea/test')
		}
	}
}*/

println("Java version: ${JavaVersion.current()}")
println("Kotlin version: $kotlinVersion")
mainClassName = 'xerus.monstercat.MonsterUtilitiesKt'

// gradle run -Dexec.args="FINE save"
run { //noinspection GroovyAssignabilityCheck
    args System.getProperty('exec.args', '').split() }

sourceSets {
	main.kotlin.srcDirs = ['src/main']
	main.resources.srcDirs = ['src/resources']
	test.kotlin.srcDirs = ['src/test']
	test.resources.srcDirs = []
}

shadowJar {
	baseName = 'MonsterUtilities'
	classifier = null
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all { kotlinOptions.jvmTarget = '1.8' }
kotlin.experimental.coroutines "enable"

repositories {
	mavenCentral()
}

dependencies {
	compile 'xerus.utils:kotlin'
	compile 'xerus.utils:javafx'

	compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlinVersion
	compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '0.+'

	compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.+'
	//compile 'com.github.vatbub:mslinks:1.0.4'

	compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.4'
	compile group: 'com.google.apis', name: 'google-api-services-sheets', version: 'v4-rev496-1.+'
	testCompile group: 'com.google.api-client', name: 'google-api-client-java6', version: '1.23.0'
	testCompile group: 'com.google.oauth-client', name: 'google-oauth-client-jetty', version: '1.11.0-beta'

}

def MAIN = '!main'
run.setGroup(MAIN)
task release(type: Exec, dependsOn: ['shadowJar'], group: MAIN) {
	//noinspection GroovyAssignabilityCheck
    ignoreExitValue true
	//file("build/libs/MonsterUtilities.jar").move(".")
	commandLine "robocopy", "/NJH", "build/libs", ".", "MonsterUtilities.jar"
}

task jar(dependsOn: ["shadowJar"], overwrite: true, group: MAIN)

group.dump()
runShadow.setGroup("")
startShadowScripts.setGroup("")
